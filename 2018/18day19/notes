addi 2 16 2   R2 = R2 + 16
seti 1 4 1    R1 = 1
seti 1 2 4    R4 = 1
mulr 1 4 3    R3 = R1 * R4
eqrr 3 5 3    R3 = R3 == R5 ? 1 : 0
addr 3 2 2    R2 = R3 + R2 -- JUMP
addi 2 1 2    R2 = R2 + 1 -- JUMP
addr 1 0 0    R0 = R1 + R0
addi 4 1 4    R4 = R4 + 1
gtrr 4 5 3    R3 = R4 > R5 ? 1 : 0
addr 2 3 2    R2 = R2 + R3
seti 2 7 2    R2 = R2 + R7
addi 1 1 1    R1 = R1 + 1
gtrr 1 5 3    R3 = R1 > R5 ? 1 : 0
addr 3 2 2    R2 = R3 + R2
seti 1 0 2    R2 = 1
mulr 2 2 2    R2 = R2 * R2
addi 5 2 5
mulr 5 5 5
mulr 2 5 5
muli 5 11 5
addi 3 4 3
mulr 3 2 3
addi 3 7 3
addr 5 3 5
addr 2 0 2
seti 0 1 2
setr 2 1 3
mulr 3 2 3
addr 2 3 3
mulr 2 3 3
muli 3 14 3
mulr 3 2 3
addr 5 3 5
seti 0 9 0
seti 0 8 2


 1   seti 1 4 1    R1 = 1
 2   seti 1 2 4    R4 = 1
 3   mulr 1 4 3    R3 = R1 * R4
 4   eqrr 3 5 3    R3 = R3 == R5 ? 1 : 0
 5   addr 3 2 2    R2 = R3 + R2 -- JUMP
 6   addi 2 1 2    R2 = R2 + 1 -- JUMP
 7   addr 1 0 0    R0 = R1 + R0
 8   addi 4 1 4    R4 = R4 + 1
 9   gtrr 4 5 3    R3 = R4 > R5 ? 1 : 0
10   addr 2 3 2    R2 = R2 + R3 -- JUMP
11   seti 2 7 2    R2 = 2

12   addi 1 1 1    R1 = R1 + 1
13   gtrr 1 5 3    R3 = R1 > R5 ? 1 : 0
14   addr 3 2 2    R2 = R3 + R2 -- JUMP
15   seti 1 0 2    R2 = 1 -- JUMP
16   mulr 2 2 2    R2 = R2 * R2 -- JUMP

R1 = 1
do {
  R4 = 1
  R3 = R1 * R4
  if (R3 == R5) {
    R3 = 1
    R0 = R1 + R0
  } else {
    R3 = 0
  }
  R4 = R4 + 1
} while (R4 <= R5)

-- R3 = R4 > R5

R4 = 1
do {
  if (R1 * R4 == R5) {
    R0 = R1 + R0
  }
  R4 = R4 + 1
} while (R4 <= R5)
R3 = 1 ....

R1 = 1
do {
  if (R5 % R1 == 0) R0 += R1
  R3 = 1
  R1 = R1 + 1
} while (R1 <= R5)